---
# tasks file for java_finder

- name: Include checks/asserts
  import_tasks: asserts.yml

- name: Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"
  tags: always

#############################################################################
# Tasks for all *NIX operating systems
#############################################################################
- block:

    - name: "Check Java Version Command (Assuming Java is in PATH)"
      shell: java -version
      ignore_errors: yes
      register: JAVAP

    - name: "Result of java -version"
      debug: msg={{JAVAP.stderr_lines}}
      when: JAVAP.stderr.find('command not found') == -1

    - name: "Check process stack"
      shell: readlink -e /proc/*/exe | grep -m 1 java | grep -v grep
      ignore_errors: yes
      become: yes
      register: psresult

    - name: "Check Version from previous step"
      shell: "{{psresult.stdout}} -version"
      ignore_errors: yes
      become: yes
      register: versionresult   
      when: psresult.stdout != ""

    - name: "Version from process stack"
      debug: msg={{versionresult}}
      when: versionresult is defined

  when: ansible_os_family != 'Windows'

#############################################################################
# End of tasks for all *NIX operating systems
#############################################################################

#############################################################################
# Tasks for Windows
#############################################################################

- block:
    
    - name: Test the PsExec connection to the local system (target node) with your user
      win_shell: Get-WmiObject -Class Win32_Product -ComputerName {{ ansible_hostname }} -Filter "Name like 'Java%'" | Select Name, Version
      register: winshell

    - name: "debug windows"
      debug: msg={{winshell.stdout_lines}}

  when: ansible_os_family == 'Windows'
  
